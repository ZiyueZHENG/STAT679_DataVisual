library(tidyverse)
library(tidyquant)
library(corrplot)
library(ggtext)
library(shiny)
library(tidyverse)
library(tidyquant)
symbol1 <- read.csv("./symbol_list/nasdaq_screener_1667510028096.csv")
symbol2 <- read.csv("./symbol_list/nasdaq_screener_1667510197492.csv")
symbol3 <- read.csv("./symbol_list/nasdaq_screener_1667510230035.csv")
symbol <- rbind(symbol1,symbol2,symbol3)
getSymbols("AACIW",warnings = FALSE,auto.assign = FALSE)
fit<-try(getSymbols("AACIW",warnings = FALSE,auto.assign = FALSE),silent=TRUE)
fit
fit<-try(getSymbols("AACIW",warnings = FALSE,auto.assign = FALSE),silent=FALSE)
fit<-try(getSymbols("AACIW",warnings = FALSE,auto.assign = FALSE),silent=TRUE)
if('try-error' %in% class(fit)){
next
}else{
print(1)
}
View(symbol)
symbols <- symbol$Symbol
for (sy in symbols) {
print(sy)
}
if('try-error' %in% class(fit)){
print(1)
}else{
print(2)
}
a = NULL
av_sy <- list()
for (sy in symbols) {
fit<-try(getSymbols(sy,warnings = FALSE,auto.assign = FALSE),silent=TRUE)
if('try-error' %in% class(fit)){
next
}else{
append(av_sy , sy)
}
}
View(symbol)
head(symbols)
av_sy
try(getSymbols(sy,warnings = FALSE,auto.assign = FALSE),silent=TRUE,warning = FALSE)
for (sy in symbols) {
print(i)
i = i + 1
if('try-error' %in% class(fit)){
next
}else{
append(av_sy , sy)
}
}
i <- 0
for (sy in symbols) {
print(i)
i = i + 1
if('try-error' %in% class(fit)){
next
}else{
append(av_sy , sy)
}
}
fit
'try-error' %in% class(fit)
if('try-error' %in% class(fit)){
print(1)
}else{
append(av_sy , sy)
}
av_sy
i += 1
i <- 0
for (sy in symbols) {
fit<-try(getSymbols(sy,warnings = FALSE,auto.assign = FALSE),silent=TRUE)
print(i)
i = i + 1
if('try-error' %in% class(fit)){
next
}else{
av_sy <- append(av_sy , sy)
}
}
View(av_sy)
av_sy
symbol %>% filter(Symbol %in% av_sy)
a <- symbol %>% filter(Symbol %in% av_sy)
View(a)
symbol <- symbol %>% filter(Symbol %in% av_sy)
write.csv(symbol , './symbol_list/symbols.csv')
?write.csv
write.csv(symbol , './symbol_list/symbols.csv',row.names = FALSE)
runApp()
ï¼ŸselectInput
?selectInput
View(av_sy)
runApp()
View(av_sy)
runApp()
